<?xml version="1.0"?>
<!--
   Copyright (c) Microsoft Corporation.  All rights reserved.
-->
<configuration>
  <system.serviceModel>
    <services>
      <service name="Microsoft.Samples.SamlTokenProvider.CalculatorService" behaviorConfiguration="CalculatorServiceBehavior">
        <host>
          <baseAddresses>
            <!-- configure base address provided by host -->
            <add baseAddress="http://localhost:8000/servicemodelsamples/service/" />
          </baseAddresses>
        </host>
        <!-- use base address provided by host -->
        <!-- Endpoint that expect SAML tokens with Symmetric proof keys -->
        <endpoint address="calc/symm" binding="wsFederationHttpBinding" bindingConfiguration="Binding1" contract="Microsoft.Samples.SamlTokenProvider.ICalculator" />
        <!-- Endpoint that expect SAML tokens with Asymmetric proof keys -->
        <endpoint address="calc/asymm" binding="wsFederationHttpBinding" bindingConfiguration="Binding2" contract="Microsoft.Samples.SamlTokenProvider.ICalculator" />
      </service>
    </services>
    <bindings>
      <wsFederationHttpBinding>
        <!-- Binding that expect SAML tokens with Symmetric proof keys -->
        <binding name="Binding1">
          <security mode="Message">
            <message negotiateServiceCredential="false" issuedKeyType="SymmetricKey" issuedTokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1" />
          </security>
        </binding>
        <!-- Binding that expect SAML tokens with Asymmetric proof keys -->
        <binding name="Binding2">
          <security mode="Message">
            <message negotiateServiceCredential="false" issuedKeyType="AsymmetricKey" issuedTokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1" />
          </security>
        </binding>
      </wsFederationHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="CalculatorServiceBehavior">
          <!-- 
          The serviceCredentials behavior allows one to define a service certificate.
          A service certificate is used by a client to authenticate the service and provide message protection.
          This configuration references the "localhost" certificate installed during the setup instructions.
          -->
          <serviceCredentials>
            <!-- Set allowUntrustedRsaIssuers to true to allow self-signed, asymmetric key based SAML tokens -->
            <issuedTokenAuthentication allowUntrustedRsaIssuers="true">
              <!-- Add Alice to the list of certs trusted to issue SAML tokens -->
              <knownCertificates>
                <add storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindBySubjectName" findValue="Alice" />
              </knownCertificates>
            </issuedTokenAuthentication>
            <serviceCertificate storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" findValue="localhost" />
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
</configuration>
